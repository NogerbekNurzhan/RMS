# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-06-14 11:37
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='CreationGoal',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('text', models.TextField(verbose_name='Text')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('symbol', models.CharField(editable=False, max_length=250, verbose_name='Symbol')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
            ],
            options={
                'ordering': ('create_time',),
            },
        ),
        migrations.CreateModel(
            name='GroupRequirement',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='GroupRequirementType',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('is_visible', models.BooleanField(default=False)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupRequirementTypeDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='GroupTask',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('symbol', models.CharField(editable=False, max_length=250, verbose_name='Symbol')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
            ],
            options={
                'ordering': ('create_time',),
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('manager', 'Manager'), ('developer', 'Developer'), ('business_analyst', 'Business Analyst'), ('system_analyst', 'System Analyst')], max_length=20, verbose_name='Role')),
            ],
        ),
        migrations.CreateModel(
            name='ObjectInformation',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('text', models.TextField(verbose_name='Text')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Date of creation')),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('status', models.CharField(choices=[('open', 'Active'), ('close', 'Finished')], default='open', max_length=20, verbose_name='Status')),
                ('members', models.ManyToManyField(help_text='Members', through='project.Member', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Project',
                'ordering': ('-creation_date',),
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Purpose',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('text', models.TextField(verbose_name='Text')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('description', models.TextField(verbose_name='Description')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
                ('function', models.ManyToManyField(to='project.Function')),
                ('group_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.GroupRequirement')),
            ],
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('description', models.TextField(verbose_name='Description')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Requirement')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('symbol', models.CharField(editable=False, max_length=250, verbose_name='Symbol')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
                ('group_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.GroupTask')),
            ],
            options={
                'ordering': ('create_time',),
            },
        ),
        migrations.CreateModel(
            name='UserCharacteristic',
            fields=[
                ('code', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='Code')),
                ('user_class', models.CharField(max_length=250, verbose_name='Class')),
                ('user_symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('user_description', models.TextField(verbose_name='Description')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('revision_date', models.DateTimeField(auto_now=True, verbose_name='Date of last update')),
                ('comments', models.ManyToManyField(to='project.Comment')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project')),
            ],
        ),
        migrations.CreateModel(
            name='UserCharacteristicDictionary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_class', models.CharField(max_length=250, verbose_name='Class')),
                ('user_symbol', models.CharField(max_length=250, verbose_name='Symbol')),
                ('user_description', models.TextField(verbose_name='Description')),
            ],
        ),
        migrations.AddField(
            model_name='requirement',
            name='user_characteristic',
            field=models.ManyToManyField(to='project.UserCharacteristic'),
        ),
        migrations.AddField(
            model_name='objectinformation',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
        migrations.AddField(
            model_name='member',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
        migrations.AddField(
            model_name='member',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='grouptask',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
        migrations.AddField(
            model_name='grouprequirementtype',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
        migrations.AddField(
            model_name='grouprequirement',
            name='group_requirement_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.GroupRequirementType'),
        ),
        migrations.AddField(
            model_name='grouprequirement',
            name='task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='project.Task'),
        ),
        migrations.AddField(
            model_name='function',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Task'),
        ),
        migrations.AddField(
            model_name='creationgoal',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.Project'),
        ),
    ]
